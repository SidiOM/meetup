<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<groupId>com.archane.consulting</groupId>
	<artifactId>master</artifactId>
	<modelVersion>4.0.0</modelVersion>
	<version>0.0.2-SNAPSHOT</version>
	<packaging>pom</packaging>

	<url>http://jboss.org/jbossas</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>

	<modules>
		<module>../meetup-facade-mod</module>
		<!-- <module>../meetup-ws-mod</module> -->
		<module>../meetup-persistence-mod</module>
		<module>../meetup-services-mod</module>
		<module>../meetup-web-mod</module>
		<module>../distribution-mod</module>
	</modules>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- JBoss dependency versions -->
		<version.jboss.maven.plugin>7.4.Final</version.jboss.maven.plugin>
		<version.jboss.as>7.4.0.Final-redhat-19</version.jboss.as>
		<version.jboss.spec.javaee.6.0>3.0.2.Final-redhat-13</version.jboss.spec.javaee.6.0>

		<!-- Define the version of the JBoss BOMs we want to import to specify 
			tested stacks. -->
		<version.jboss.bom.eap>6.3.0.GA</version.jboss.bom.eap>
		<version.jboss.as>7.4.0.Final-redhat-19</version.jboss.as>

		<!-- other plugin versions -->
		<version.ear.plugin>2.8</version.ear.plugin>
		<version.ejb.plugin>2.3</version.ejb.plugin>
		<version.war.plugin>2.1.1</version.war.plugin>

		<!-- maven-compiler-plugin -->
		<maven.compiler.target>1.6</maven.compiler.target>
		<maven.compiler.source>1.6</maven.compiler.source>

		<!-- other plugin versions -->
		<version.exec.plugin>1.2.1</version.exec.plugin>
		<version.war.plugin>2.1.1</version.war.plugin>

		<!-- Spring -->
		<version.spring-framework>4.0.5.RELEASE</version.spring-framework>
		<!--version.spring-framework>3.2.3.RELEASE</version.spring-framework -->
		<version.spring-data-jpa>1.8.2.RELEASE</version.spring-data-jpa>
		<version.spring-security>3.2.3.RELEASE</version.spring-security>

		<version.com.sun.faces>2.1.13</version.com.sun.faces>

		<version.javax.servlet>2.5</version.javax.servlet>

		<!-- other plugin versions -->
		<version.war.plugin>2.1.1</version.war.plugin>

		<!-- maven-compiler-plugin -->
		<maven.compiler.target>1.6</maven.compiler.target>
		<maven.compiler.source>1.6</maven.compiler.source>

		<!-- Logger -->
		<version.slf4j>1.7.7</version.slf4j>

		<!-- Hibernate -->
		<version.org.hibernate3.commons.annotations>3.2.0.Final</version.org.hibernate3.commons.annotations>
		<version.org.hibernate>3.6.8.Final</version.org.hibernate>
		<version.org.hibernate.em>3.6.8.Final</version.org.hibernate.em>
		<version.org.hibernate.infinispan>3.6.8.Final</version.org.hibernate.infinispan>
		<version.org.hibernate.validator>3.1.0.GA</version.org.hibernate.validator>

	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Define the version of the EJB jar so that we don't need to repeat 
				ourselves in every module -->
			<dependency>
				<groupId>com.archane.consulting</groupId>
				<artifactId>meetup-facade-mod</artifactId>
				<version>0.0.2-SNAPSHOT</version>
				<type>ejb</type>
			</dependency>
			<!-- Define the version of the WAR so that we don't need to repeat ourselves 
				in every module -->
			<dependency>
				<groupId>com.archane.consulting</groupId>
				<artifactId>meetup-ws-mod</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<type>war</type>
			</dependency>
			<dependency>
				<groupId>com.archane.consulting</groupId>
				<artifactId>meetup-web-mod</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<type>war</type>
			</dependency>
			<dependency>
				<groupId>com.archane.consulting</groupId>
				<artifactId>meetup-services-mod</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.archane.consulting</groupId>
				<artifactId>meetup-persistences-mod</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<!-- Define the version of JBoss' Java EE 6 APIs we want to import. Any 
				dependencies from org.jboss.spec will have their version defined by this 
				BOM -->
			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0 stack (you can read this as 
				the JBoss stack of the Java EE 6 APIs). You can actually use this stack with 
				any version of JBoss EAP that implements Java EE 6. -->
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-6.0</artifactId>
				<version>${version.jboss.spec.javaee.6.0}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.jboss.as</groupId>
				<artifactId>jboss-as-ejb-client-bom</artifactId>
				<version>${version.jboss.as}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>6.0</version>
				<scope>provided</scope>
			</dependency>


			<!-- Spring Framework -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${version.spring-framework}</version>
				<!-- <scope>provided</scope> -->
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${version.spring-framework}</version>
				<!-- <scope>provided</scope> -->
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${version.spring-framework}</version>
				<!-- <scope>provided</scope> -->
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${version.spring-framework}</version>
				<!-- <scope>provided</scope> -->
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${version.spring-framework}</version>
				<!-- <scope>provided</scope> -->
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${version.spring-framework}</version>
				<!-- <scope>provided</scope> -->
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${version.spring-framework}</version>
				<!-- <scope>provided</scope> -->
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${version.spring-framework}</version>
				<!-- <scope>provided</scope> -->
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${version.spring-framework}</version>
				<!-- <scope>provided</scope> -->
			</dependency>

			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${version.spring-data-jpa}</version>
				<!-- <scope>provided</scope> -->
			</dependency>

			<dependency>
				<groupId>aopalliance</groupId>
				<artifactId>aopalliance</artifactId>
				<version>1.0</version>
			</dependency>
            
            <!-- Aspectj -->
			<dependency>
				<groupId>aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>1.5.4</version>
			</dependency>

			<!-- Oracle -->
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc6</artifactId>
				<version>11.1.0</version>
			</dependency>

			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>1.2.2</version>
			</dependency>

			<!-- Define hiberante artifacts versions -->
			<!-- Define dependency version of hibernate-core -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${version.org.hibernate}</version>

				<!-- Some transitive dependencies of Hibernate 3 are available in JBoss 
					EAP 6 as modules, so we don't include them in WEB-INF/lib, but instead depend 
					on the modules -->
				<exclusions>
					<exclusion>
						<groupId>antlr</groupId>
						<artifactId>antlr</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-collections</groupId>
						<artifactId>commons-collections</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>dom4j</groupId>
						<artifactId>dom4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.transaction</groupId>
						<artifactId>jta</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Define dependency version of hibernate-entitymanager -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${version.org.hibernate.em}</version>
				<!-- Some transitive dependencies of Hibernate 3 are available in JBoss 
					EAP 6 as modules, so we don't include them in WEB-INF/lib, but instead depend 
					on the modules -->
				<exclusions>
					<exclusion>
						<groupId>asm</groupId>
						<artifactId>asm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javassist</groupId>
						<artifactId>javassist</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>cglib</groupId>
						<artifactId>cglib</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Define dependency version of hibernate-validator -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${version.org.hibernate.validator}</version>
				<!-- Some transitive dependencies of Hibernate 3 are available in JBoss 
					EAP 6 as modules, so we don't include them in WEB-INF/lib, but instead depend 
					on the modules -->
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Define dependency version of hibernate-commons-annotations -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-commons-annotations</artifactId>
				<version>${version.org.hibernate3.commons.annotations}</version>
				<!-- Some transitive dependencies of Hibernate 3 are available in JBoss 
					EAP 6 as modules, so we don't include them in WEB-INF/lib, but instead depend 
					on the modules -->
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Define dependency version of hibernate-infinispan -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-infinispan</artifactId>
				<version>${version.org.hibernate.infinispan}</version>
				<exclusions>
					<!-- Some transitive dependencies of Hibernate 3 are available in JBoss 
						EAP 6 as modules, so we don't include them in WEB-INF/lib, but instead depend 
						on the modules -->
					<exclusion>
						<groupId>org.infinispan</groupId>
						<artifactId>infinispan-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-testing</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Logger -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!-- JSF -->
			<dependency>
				<groupId>com.sun.faces</groupId>
				<artifactId>jsf-api</artifactId>
				<version>${version.com.sun.faces}</version>
				<scope>runtime</scope>
			</dependency>

			<dependency>
				<groupId>com.sun.faces</groupId>
				<artifactId>jsf-impl</artifactId>
				<version>${version.com.sun.faces}</version>
				<scope>runtime</scope>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${version.javax.servlet}</version>
				<scope>runtime</scope>
			</dependency>


		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!-- The JBoss AS plugin deploys your ear to a local JBoss EAP container -->
			<!-- Due to Maven's lack of intelligence with EARs we need to configure 
				the jboss-as maven plugin to skip deployment for all modules. We then enable 
				it specifically in the ear module. -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>${version.jboss.maven.plugin}</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>